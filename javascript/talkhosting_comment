- installed package
  . express
  . session
  . body-parser
  . pbkdf2-password
  . passport
  . multer
  . socket.io

- line 165
  . get으로 /index에 들어오면 passport에서 자동으로 넣어주는 session명인
    req.user에 값이 undefined라면 views폴더에 index.html로 보내준다.

    ... __dirname은 node에서 제공하는 node파일의 경로를 담고있는 변수이다.
        보통 __dirname + '/public' 이라던지 __dirname + '/views' 형식으로 경로를
        지정해준다.

    ... __dirname + '/views' 와 path.join(__dirname, 'views') 의 실행결과는 같지만
        join을 쓰는 이유는 '/' 에 상관없이 알아서 조합을 해준다.
        전자는 __dirname + 'views' 라고 쓰면 오류가 나지만 join은 어떻게 써주어도 같다

  . req.user에 값이 있다면 welcome페이지로 보내준다.

- line 133
  . 로그인을 하면 post로 chat.html로 보낸다.

- line 122
  . post방식의 chat.html로 들어오면 passport패키지의 authenticate메소드가 실행되며
    local(자체)방식의 인증이 이루어진다.

- line 96
  . local인증방식의 상세 정책을 정의한다.
    인자로 username과 password를 받는데 이때 index.html에서의 폼이름이
    username과 password이어야 한다.
    passport자체에 default값이 username과 password로 지정되어있고,
    바꿀 수 있는 방법도 있긴하지만 그대로 씀

  ... 여기서 DB중 id값이 일치하는것이 있다면 입력받은 password와
      회원가입시 저장되었던 salt값을 불러와 pbkdf2-password의 방식으로 hash코드를 만들고
      DB에 저장되어있던 hash값과 일치하면 인증 성공을 하며 done메소드로 회원(member)객체를 보낸다.
      실패시 false를 보낸다.

  . 들어왔던 적이 없던 사용자라면 serializeUser 메서드를 이용하여 사용자정보를
    session에 저장할 정보를 done의 두번째 인자에 넘기면되는데
    이때 받아오는 user라는 인자는 110번라인에서 넘어온것이다.

- line 91
  . 이제부터 로그인이 되어있을 경우 페이지를 접근할 때마다 deserializeUser 메서드가
    실행된다.

** serializeUser와 deserializeUser
  . 첫 로그인시에만 serializeUser
    이 후부터는 deserializeUser가 실행되는데
    이 이유는 session에 너무 많은 정보를 저장하면 메모리가 많이 소모되므로
    serializeUser할때 한번만 userId와 같은 key정보만 저장하고
    이 후부터는 deserializeUser시에 session에 저장된 key를 가지고
    db에서 select든 find든 하는 방식을 passport에서 권장하고 있다.
    하지만 매번 select하는것도 성능에 영향을 주기때문에
    로그인 데이터가 많지않다면 객체 자체를 저장하는것도 좋다.


- chat.html line 143
  . 이 때부터는 html파일의 script로 socket이 열리고

- line 210
  . 기본 메서드? 인 connection이 실행되며 새로운 연결시마다 각각의 고유한
    socket.id 가 부여된다.

- line 218
  . socket.id를 지정해주어서 해당되는 id만 실행시키도록 change name이라는
    메서드를 실행시키도록 요청했고, line 107에서 전역변수에 저장해 놓았던 nickname의
    값을 같이 보내준다.

- chat.html line 167
  . nickname폼에 받아온 nickname을 세팅하고 change name2 메서드를 요청하며 값을 전달

- line 213
  . change name2를 받아 goname변수에 nickname을 setting

- chat.html line 150
  . chat폼에 sumit요청이 오면 send message라는 메서드를 실행
  ... line154 추가적인 요청이 가지 않게 함

- line 252
  . message를 받아 닉네임세팅
  . database에 저장
  . receive message를 요청

- chat.html line 163
  . 채팅 창에 값을 세팅해주고
  . 스크롤을 제일 아래로 내려준다.
